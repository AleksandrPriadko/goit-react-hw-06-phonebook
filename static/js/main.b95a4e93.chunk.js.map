{"version":3,"sources":["components/PhoneBookForm/Styles.module.scss","components/Contacts/Style.module.scss","components/PhoneBookForm/PhoneBookForm.jsx","redux/app-actions.js","components/PhoneBookForm/PhoneBook.jsx","components/Contacts/FindContacts.jsx","components/Contacts/ContactsList.jsx","components/Contacts/Contacts.jsx","App.js","redux/app-reducer.js","redux/store.js","index.js"],"names":["module","exports","Form","this","props","handleChange","handleSubmit","state","className","styles","form","onSubmit","label","type","name","value","placeholder","pattern","title","required","onChange","input","number","button","Component","addContact","createAction","data","payload","id","uuidv4","deleteContact","changeFilter","INITIAL_STATE","Phonebook","target","setState","event","preventDefault","reset","connect","dispatch","FindContacts","filter","handleFilter","onInput","autoComplete","ContactsList","contacts","map","contact","onClick","allItems","normalizedFilter","toLocaleLowerCase","includes","getVisebleContacts","items","Contacts","App","createReducer","console","log","contactName","some","alert","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","appReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.b95a4e93.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Styles_input__nOoyE\",\"label\":\"Styles_label__3APz2\",\"button\":\"Styles_button__2lBsi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Style_input__2Qelg\",\"contacts\":\"Style_contacts__4ymdB\",\"contact\":\"Style_contact__28ZvR\",\"button\":\"Style_button__26zBA\"};","import { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Styles.module.scss\";\r\n\r\nexport class Form extends Component {\r\n  render() {\r\n    const { handleChange, handleSubmit, state } = this.props;\r\n\r\n    return (\r\n      <form className={styles.form} onSubmit={handleSubmit}>\r\n        <label className={styles.label}>\r\n          <span>Name</span>\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={state.name}\r\n            placeholder=\"John Doe\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            onChange={handleChange}\r\n            className={styles.input}\r\n          />\r\n        </label>\r\n        <label className={styles.label}>\r\n          <span>Number</span>\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={state.number}\r\n            placeholder=\"+38...\"\r\n            pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\r\n            title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\r\n            required\r\n            onChange={handleChange}\r\n            className={styles.input}\r\n          />\r\n        </label>\r\n        <button className={styles.button} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nForm.propTypes = {\r\n  state: PropTypes.object.isRequired,\r\n  handleChange: PropTypes.func.isRequired,\r\n  handleSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Form;\r\n","import { v4 as uuidv4 } from \"uuid\";\r\nimport { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst addContact = createAction(\"app/addContacts\", (data) => ({\r\n  payload: {\r\n    id: uuidv4(),\r\n    name: data.name,\r\n    number: data.number,\r\n  },\r\n}));\r\n\r\nconst deleteContact = createAction(\"app/deleteContacts\");\r\nconst changeFilter = createAction(\"app/filterContacts\");\r\n\r\nexport { addContact, deleteContact, changeFilter };\r\n","import { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Form from \"./PhoneBookForm\";\r\nimport { addContact } from \"../../redux/app-actions\";\r\n\r\nconst INITIAL_STATE = {\r\n  name: \"\",\r\n  number: \"\",\r\n};\r\n\r\nclass Phonebook extends Component {\r\n  state = {\r\n    ...INITIAL_STATE,\r\n  };\r\n\r\n  handleChange = ({ target }) => {\r\n    const { name, value } = target;\r\n\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    this.props.onSubmit({ ...this.state });\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ ...INITIAL_STATE });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Form\r\n        handleChange={this.handleChange}\r\n        handleSubmit={this.handleSubmit}\r\n        state={this.state}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onSubmit: (data) => dispatch(addContact(data)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(Phonebook);\r\n","import { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { changeFilter } from \"../../redux/app-actions\";\r\nimport styles from \"./Style.module.scss\";\r\n\r\nclass FindContacts extends Component {\r\n  render() {\r\n    const { filter, handleFilter } = this.props;\r\n\r\n    return (\r\n      <div>\r\n        <h3>Find contacts by name</h3>\r\n        <input\r\n          type=\"text\"\r\n          name=\"query\"\r\n          value={filter}\r\n          required\r\n          onInput={handleFilter}\r\n          className={styles.input}\r\n          autoComplete=\"off\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  handleFilter: (event) => dispatch(changeFilter(event.target.value)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(FindContacts);\r\n","import { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport styles from \"./Style.module.scss\";\r\nimport { deleteContact } from \"../../redux/app-actions\";\r\n\r\nclass ContactsList extends Component {\r\n  render() {\r\n    const { contacts, deleteContact } = this.props;\r\n\r\n    return (\r\n      <ul className={styles.contacts}>\r\n        {contacts.map(({ id, name, number }) => {\r\n          return (\r\n            <li key={id} className={styles.contact}>\r\n              <span>{name}</span>\r\n              <span>{number}</span>\r\n              <button\r\n                className={styles.button}\r\n                onClick={() => deleteContact(id)}\r\n              >\r\n                X\r\n              </button>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nconst getVisebleContacts = (allItems, filter) => {\r\n  const normalizedFilter = filter.toLocaleLowerCase();\r\n  return allItems.filter(\r\n    ({ name, number }) =>\r\n      name.toLocaleLowerCase().includes(normalizedFilter) ||\r\n      number.includes(filter)\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  const { items, filter } = state.contacts;\r\n  const visibleItems = getVisebleContacts(items, filter);\r\n  return { contacts: visibleItems };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  deleteContact: (id) => dispatch(deleteContact(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsList);\r\n","import { Component } from \"react\";\r\nimport FindContacts from \"./FindContacts\";\r\nimport ContactsList from \"./ContactsList\";\r\n\r\nclass Contacts extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h2>Contacts</h2>\r\n        <FindContacts />\r\n\r\n        <ContactsList />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contacts;\r\n","import { Component } from \"react\";\r\nimport AddContactForm from \"./components/PhoneBookForm\";\r\nimport Contacts from \"./components/Contacts\";\r\n\r\nexport class App extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <h1>Phonebook</h1>\r\n        <div className=\"container\">\r\n          <AddContactForm />\r\n          <Contacts />\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import { combineReducers } from \"redux\";\r\nimport { addContact, deleteContact, changeFilter } from \"./app-actions\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\n\r\nconst items = createReducer([], {\r\n  [addContact]: (state, { payload }) => {\r\n    console.log(state);\r\n    const contactName = state.some((contact) => contact.name === payload.name);\r\n    console.log(contactName);\r\n    return contactName\r\n      ? alert(`${payload.name} is already in contacts!`)\r\n      : [...state, payload];\r\n  },\r\n  [deleteContact]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\nconst filter = createReducer(\"\", {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({ items, filter });\r\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport appReducer from \"../redux/app-reducer\";\r\nimport logger from \"redux-logger\";\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\nconst contactsPersistConfig = {\r\n  key: \"root\",\r\n  storage,\r\n  blacklist: [\"filter\"],\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: persistReducer(contactsPersistConfig, appReducer),\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport default { store, persistor };\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\nimport App from \"./App\";\r\nimport store from \"./redux/store\";\r\nimport \"./styles.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store.store}>\r\n      <PersistGate loading={null} persistor={store.persistor}>\r\n        <App />\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}